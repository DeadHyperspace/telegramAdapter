

networks:

  resource1:
    name: resource1
    driver: bridge
services:
  telegram-adapter-db:
    container_name: telegram-adapter-db
    image: postgres:12.3-alpine
    restart: no
    networks:
      - resource1
    environment:
      POSTGRES_PASSWORD: developer
      POSTGRES_USER: developer
      POSTGRES_DB: telegram_adapter
      POSTGRES_HOST_AUTH_METHOD: password
    ports:
      - 30666:5432
    hostname: db.telegram-adapter.res
    volumes:
      - type: volume
        source: telegram_adapter_db
        target: /var/lib/postgresql/data

  telegram-adapter-php:
    container_name: telegram-adapter-php
    image: telegram-adapter-php
    restart: no
    build: ./.docker/app/
    volumes:
      - ".:/var/www/telegramAdapter"
    networks:
      - resource1
    hostname: app.telegram-adapter.loc
    depends_on:
      - telegram-adapter-db
    
  telegram-adapter-nginx:
    container_name: telegram-adapter-nginx
    image: nginx:1.19-alpine
    restart: no
    ports:
      - "30667:80"
    networks:
      - resource1
    hostname: api.telegram-adapter.srv
    volumes:
      - "./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./.docker/nginx/telegramAdapter.conf:/etc/nginx/conf.d/default.conf"
      - ".:/var/www/telegramAdapter"
    depends_on:
      - telegram-adapter-php


volumes:
  telegram_adapter_db:
    driver: local
